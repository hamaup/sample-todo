name: Auto Fix Tests and Merge

on:
  pull_request:
    types: [opened, synchronize]
  workflow_run:
    workflows: ["CI"]
    types: [completed]

permissions:
  contents: write
  pull-requests: write
  actions: read
  checks: write

jobs:
  auto-fix:
    if: |
      github.event_name == 'workflow_run' && 
      github.event.workflow_run.conclusion == 'failure' &&
      github.event.workflow_run.event == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Get PR number
        id: pr
        run: |
          PR_NUMBER=$(gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }} \
            --jq '.pull_requests[0].number')
          echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: refs/pull/${{ steps.pr.outputs.number }}/head

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests and capture output
        id: test
        run: |
          npm test 2>&1 | tee test-output.log || true
          echo "exit_code=$?" >> $GITHUB_OUTPUT

      - name: Analyze test failures
        id: analyze
        if: steps.test.outputs.exit_code != '0'
        run: |
          # Extract failing test information
          FAILING_TESTS=$(grep -E "FAIL|✕|×" test-output.log || true)
          echo "failing_tests<<EOF" >> $GITHUB_OUTPUT
          echo "$FAILING_TESTS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Auto-fix common issues
        if: steps.test.outputs.exit_code != '0'
        run: |
          # Use the auto-fix script
          node scripts/auto-fix-tests.js || true

      - name: Run tests again
        id: retest
        if: steps.test.outputs.exit_code != '0'
        run: |
          npm test
          echo "exit_code=$?" >> $GITHUB_OUTPUT

      - name: Commit fixes
        if: steps.test.outputs.exit_code != '0' && steps.retest.outputs.exit_code == '0'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff --staged --quiet || git commit -m "fix: 自動テスト修正

          - テストの期待値を実装に合わせて更新
          - スナップショットを更新（必要な場合）
          
          Auto-generated by GitHub Actions"
          git push

  auto-merge:
    needs: [auto-fix]
    if: |
      always() && 
      (needs.auto-fix.result == 'success' || needs.auto-fix.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Wait for CI to complete
        run: sleep 30

      - name: Check PR status
        id: pr-status
        run: |
          PR_NUMBER=${{ github.event.pull_request.number || github.event.workflow_run.pull_requests[0].number }}
          
          # Get PR details
          PR_DATA=$(gh api repos/${{ github.repository }}/pulls/$PR_NUMBER)
          PR_STATE=$(echo "$PR_DATA" | jq -r '.state')
          PR_MERGEABLE=$(echo "$PR_DATA" | jq -r '.mergeable')
          PR_DRAFT=$(echo "$PR_DATA" | jq -r '.draft')
          
          # Get check runs
          CHECK_RUNS=$(gh api repos/${{ github.repository }}/commits/$(echo "$PR_DATA" | jq -r '.head.sha')/check-runs)
          ALL_CHECKS_PASSED=$(echo "$CHECK_RUNS" | jq -r '.check_runs | map(select(.status == "completed" and .conclusion == "success")) | length == (.check_runs | length)')
          
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "state=$PR_STATE" >> $GITHUB_OUTPUT
          echo "mergeable=$PR_MERGEABLE" >> $GITHUB_OUTPUT
          echo "draft=$PR_DRAFT" >> $GITHUB_OUTPUT
          echo "checks_passed=$ALL_CHECKS_PASSED" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge if ready
        if: |
          steps.pr-status.outputs.state == 'open' &&
          steps.pr-status.outputs.mergeable == 'true' &&
          steps.pr-status.outputs.draft == 'false' &&
          steps.pr-status.outputs.checks_passed == 'true'
        run: |
          # Add auto-merge label
          gh pr edit ${{ steps.pr-status.outputs.pr_number }} --add-label "auto-merge"
          
          # Enable auto-merge
          gh pr merge ${{ steps.pr-status.outputs.pr_number }} \
            --auto \
            --merge \
            --subject "Automated merge after successful tests"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on PR
        if: always()
        run: |
          PR_NUMBER=${{ steps.pr-status.outputs.pr_number }}
          
          if [[ "${{ steps.pr-status.outputs.checks_passed }}" == "true" ]]; then
            COMMENT="✅ 全てのテストが合格しました。自動マージを有効にしました。"
          else
            COMMENT="⚠️ テストの自動修正を試みましたが、まだ問題が残っています。手動での確認が必要です。"
          fi
          
          gh pr comment $PR_NUMBER --body "$COMMENT

---
*このコメントは GitHub Actions により自動生成されました。*"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}